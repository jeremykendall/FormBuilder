<?php
namespace FormBuilder;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-05-16 at 09:49:08.
 */
class FieldsetGroupTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var FieldsetGroup
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new FieldsetGroup;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers FormBuilder\FieldsetGroup::setColumns
     * @todo   Implement testSetColumns().
     */
    public function testSetColumns()
    {
        $this->object->SetColumns(2);
        $this->assertEquals(2, $this->object->GetColumns(), 'Column count matches.');
        $this->assertEmpty($this->object->GetFields(), 'Changing the column count does not affect fields.');
    }

    /**
     * @covers FormBuilder\FieldsetGroup::getColumns
     * @todo   Implement testGetColumns().
     */
    public function testGetColumns()
    {
        $this->object->SetColumns(2);
        $this->assertEquals(2, $this->object->GetColumns(), 'Column count matches.');
        $this->assertEmpty($this->object->GetFields(), 'Changing the column count does not affect fields.');
    }

    /**
     * @covers FormBuilder\FieldsetGroup::getFields
     * @todo   Implement testGetFields().
     */
    public function testGetFields()
    {
        $this->object->CreateText('test_field');
        $this->assertNotEmpty($this->object->GetFields(), 'Fields are set.');
        $this->assertEquals(1, count($this->object->GetFields()), 'Field count matches.');
    }

    /**
     * @covers FormBuilder\FieldsetGroup::createText
     * @todo   Implement testCreateText().
     */
    public function testCreateText()
    {
        $this->object->CreateText('test_name', 'test_id');
        $fields = $this->object->GetFields();
        $this->assertNotEmpty($fields, 'Fields are set.');
        $this->assertEquals('text', $fields[0]->GetType(), 'Field types match.');
        $this->assertEquals('test_name', $fields[0]->GetName(), 'Field names match.');
        $this->assertEquals('test_id', $fields[0]->GetId(), 'Field ids match.');
    }

    /**
     * @covers FormBuilder\FieldsetGroup::createSelect
     * @todo   Implement testCreateSelect().
     */
    public function testCreateSelect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers FormBuilder\FieldsetGroup::createRadio
     * @todo   Implement testCreateRadio().
     */
    public function testCreateRadio()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers FormBuilder\FieldsetGroup::createCheckbox
     * @todo   Implement testCreateCheckbox().
     */
    public function testCreateCheckbox()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers FormBuilder\FieldsetGroup::createTextarea
     * @todo   Implement testCreateTextarea().
     */
    public function testCreateTextarea()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
